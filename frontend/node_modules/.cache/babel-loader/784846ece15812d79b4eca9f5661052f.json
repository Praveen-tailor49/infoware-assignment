{"ast":null,"code":"var _jsxFileName = \"/home/praveen/Documents/Projects/infoware/frontend/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Navbar, Container, Nav, Card, ListGroup, ListGroupItem, Button, Col, Row } from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home(_ref) {\n  _s();\n\n  let {\n    order\n  } = _ref;\n  const navigate = useNavigate();\n  const [allProduct, setAllProduct] = useState([]);\n  const [productname, setProductName] = useState();\n  const [productprice, setProductPrice] = useState();\n  const [productimage, setProductImage] = useState();\n  useEffect(() => {\n    var requestOptions = {\n      method: 'POST',\n      redirect: 'follow'\n    };\n    fetch(\"http://localhost:3001/allProduct\", requestOptions).then(response => response.json()).then(result => {\n      console.log(result);\n      setAllProduct(result);\n    }).catch(error => console.log('error', error));\n  }, []);\n\n  const orderPro = (e, data) => {\n    e.preventDefault();\n    order(data);\n    setProductImage(data.productimage);\n    setProductName(data.productname);\n    setProductPrice(data.productprice);\n    const payload = {\n      productimage,\n      productname,\n      productprice\n    };\n    fetch('http://localhost:3001/add-order', {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    }).then(res => res.json()).then(res => {\n      if (res === 'Place Order') {\n        navigate('/customer-order');\n      } else {\n        alert('Not Place Order');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"primary\",\n      variant: \"dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          children: \"Infoware\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"me-auto\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/view-order\",\n            style: {\n              color: 'white'\n            },\n            children: \"View Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        marginTop: '30px'\n      },\n      children: allProduct.map(data => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"3\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '18rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: data.productimage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: data.productname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                className: \"list-group-flush\",\n                children: /*#__PURE__*/_jsxDEV(ListGroupItem, {\n                  children: data.productprice\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  type: \"submit\",\n                  onClick: e => {\n                    orderPro(e, data);\n                  },\n                  children: \"Buy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"YT8t63HDouHwOzSDkOLhJI3a91A=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/praveen/Documents/Projects/infoware/frontend/src/pages/Home.js"],"names":["React","useEffect","useState","Navbar","Container","Nav","Card","ListGroup","ListGroupItem","Button","Col","Row","Link","useNavigate","Home","order","navigate","allProduct","setAllProduct","productname","setProductName","productprice","setProductPrice","productimage","setProductImage","requestOptions","method","redirect","fetch","then","response","json","result","console","log","catch","error","orderPro","e","data","preventDefault","payload","mode","headers","body","JSON","stringify","res","alert","color","marginTop","map","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Navbar, Container, Nav, Card, ListGroup, ListGroupItem, Button, Col, Row } from 'react-bootstrap';\nimport { Link , useNavigate} from 'react-router-dom';\nfunction Home({order}) {\n    const navigate = useNavigate();\n    const [allProduct, setAllProduct] = useState([])\n    const [productname, setProductName] = useState()\n    const [productprice, setProductPrice] = useState()\n    const [productimage, setProductImage] = useState()\n    useEffect(() => {\n\n        var requestOptions = {\n            method: 'POST',\n            redirect: 'follow'\n        };\n\n        fetch(\"http://localhost:3001/allProduct\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                console.log(result)\n                setAllProduct(result)\n\n            })\n            .catch(error => console.log('error', error));\n    }, [])\n\n        const orderPro = (e, data) => {\n           \n            e.preventDefault();\n            order(data);\n            setProductImage(data.productimage)\n            setProductName(data.productname)\n            setProductPrice(data.productprice)\n            const payload = {\n                productimage,\n                productname,\n                productprice,\n            }\n            fetch('http://localhost:3001/add-order', {\n                method:'POST',\n                mode:'cors',\n                headers:{\n                    \"Content-Type\" : \"application/json\"\n                },\n                body:JSON.stringify(payload)\n            }).then(res=>res.json())\n            .then((res)=>{\n                if(res === 'Place Order'){\n                    navigate('/customer-order')\n                }else{\n                    alert('Not Place Order');\n                }\n            })\n        }\n\n    return (\n        <>\n\n            <Navbar bg=\"primary\" variant=\"dark\">\n                <Container>\n                    <Navbar.Brand >Infoware</Navbar.Brand>\n                    <Nav className=\"me-auto\">\n                        <Link to=\"/view-order\" style={{ color: 'white' }}>View Order</Link>\n                    </Nav>\n                </Container>\n            </Navbar>\n            <Row style={{marginTop:'30px'}}>\n            {\n                allProduct.map(data => {\n                    return (\n                        <>\n                           \n\n                                <Col lg='3'>\n\n                                    <Card style={{ width: '18rem' }}>\n                                        <Card.Img variant=\"top\" src={data.productimage} />\n                                        <Card.Body>\n                                            <Card.Title>{data.productname}</Card.Title>\n\n                                        </Card.Body>\n                                        <ListGroup className=\"list-group-flush\">\n                                            <ListGroupItem>{data.productprice}</ListGroupItem>\n                                        </ListGroup>\n                                        <Card.Body>\n                                            \n                                                <Button variant=\"primary\" type=\"submit\" onClick={(e)=>{orderPro(e,data) }} >\n                                                    Buy\n                                                </Button>\n                                            \n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            \n\n\n\n                        </>\n                    )\n                })\n            }\n            </Row>\n\n\n        </>\n    )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}