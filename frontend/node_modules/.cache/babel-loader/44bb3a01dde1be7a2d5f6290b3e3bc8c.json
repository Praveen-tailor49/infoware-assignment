{"ast":null,"code":"var _jsxFileName = \"/home/praveen/Documents/Projects/infoware/frontend/src/pages/CustomerViewPro.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Navbar, Container, Nav, Card, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CustomerViewPro() {\n  _s();\n\n  const [userName] = useState(localStorage.getItem('user'));\n  const [userOrder, setUserOrder] = useState([]);\n  useEffect(() => {\n    var raw = JSON.stringify({\n      \"username\": userName\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch(\"localhost:3001/userOrder\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"primary\",\n      variant: \"dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          children: \"View Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        marginTop: '30px'\n      },\n      children: userOrder.map(data => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"3\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '18rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: data.productimage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: data.productname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                className: \"list-group-flush\",\n                children: /*#__PURE__*/_jsxDEV(ListGroupItem, {\n                  children: data.productprice\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 37\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CustomerViewPro, \"FpxLvY2XPNQH4SbmGhdhNrLJt1A=\");\n\n_c = CustomerViewPro;\nexport default CustomerViewPro;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerViewPro\");","map":{"version":3,"sources":["/home/praveen/Documents/Projects/infoware/frontend/src/pages/CustomerViewPro.js"],"names":["React","useState","useEffect","Navbar","Container","Nav","Card","ListGroup","ListGroupItem","CustomerViewPro","userName","localStorage","getItem","userOrder","setUserOrder","raw","JSON","stringify","requestOptions","method","headers","myHeaders","body","redirect","fetch","then","response","text","result","console","log","catch","error","marginTop","map","data","width","productimage","productname","productprice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,GAA5B,EAAiCC,IAAjC,EAAuCC,SAAvC,EAAkDC,aAAlD,QAAuE,iBAAvE;;;;AAIA,SAASC,eAAT,GAA2B;AAAA;;AAEvB,QAAM,CAACC,QAAD,IAAaT,QAAQ,CAACU,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAA3B;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIa,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAe;AACrB,kBAAYP;AADS,KAAf,CAAV;AAIE,QAAIQ,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAEC,SAFU;AAGnBC,MAAAA,IAAI,EAAEP,GAHa;AAInBQ,MAAAA,QAAQ,EAAE;AAJS,KAArB;AAOAC,IAAAA,KAAK,CAAC,0BAAD,EAA6BN,cAA7B,CAAL,CACGO,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAFlB,EAGGG,KAHH,CAGSC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB,CAHlB;AAIL,GAjBQ,EAiBN,EAjBM,CAAT;AAoBA,sBACI;AAAA,4BAEI,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAqB,MAAA,OAAO,EAAC,MAA7B;AAAA,6BACI,QAAC,SAAD;AAAA,+BACI,QAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQI,QAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,gBAEYpB,SAAS,CAACqB,GAAV,CAAcC,IAAI,IAAI;AAClB,4BACI;AAAA,iCACI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,GAAR;AAAA,mCAEI,QAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEC,gBAAAA,KAAK,EAAE;AAAT,eAAb;AAAA,sCACI,QAAC,IAAD,CAAM,GAAN;AAAU,gBAAA,OAAO,EAAC,KAAlB;AAAwB,gBAAA,GAAG,EAAED,IAAI,CAACE;AAAlC;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,uCACI,QAAC,IAAD,CAAM,KAAN;AAAA,4BAAaF,IAAI,CAACG;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAMI,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAC,kBAArB;AAAA,uCACI,QAAC,aAAD;AAAA,4BAAgBH,IAAI,CAACI;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ,yBADJ;AAkBH,OAnBD;AAFZ;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADJ;AAmCH;;GA5DQ9B,e;;KAAAA,e;AA8DT,eAAeA,eAAf","sourcesContent":["import React,{useState, useEffect} from 'react'\nimport { Navbar, Container, Nav, Card, ListGroup, ListGroupItem } from 'react-bootstrap';\n\n\n\nfunction CustomerViewPro() {\n\n    const [userName] = useState(localStorage.getItem('user'))\n\n    const [userOrder, setUserOrder] = useState([])\n    useEffect(() => {\n\n        var raw = JSON.stringify({\n            \"username\": userName\n          });\n          \n          var requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n          };\n          \n          fetch(\"localhost:3001/userOrder\", requestOptions)\n            .then(response => response.text())\n            .then(result => console.log(result))\n            .catch(error => console.log('error', error));\n    }, [])\n\n\n    return (\n        <>\n           \n            <Navbar bg=\"primary\" variant=\"dark\">\n                <Container>\n                    <Navbar.Brand >View Order</Navbar.Brand>\n                </Container>\n            </Navbar>\n\n            <Row style={{ marginTop: '30px' }}>\n                    {\n                        userOrder.map(data => {\n                            return (\n                                <>\n                                    <Col lg='3'>\n    \n                                        <Card style={{ width: '18rem' }}>\n                                            <Card.Img variant=\"top\" src={data.productimage} />\n                                            <Card.Body>\n                                                <Card.Title>{data.productname}</Card.Title>\n    \n                                            </Card.Body>\n                                            <ListGroup className=\"list-group-flush\">\n                                                <ListGroupItem>{data.productprice}</ListGroupItem>\n                                                \n                                            </ListGroup>\n                                        </Card>\n                                    </Col>\n                                </>\n                            )\n                        })\n                    }\n                </Row>\n        </>\n    )\n}\n\nexport default CustomerViewPro\n"]},"metadata":{},"sourceType":"module"}